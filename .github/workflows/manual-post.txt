name: Manual Claude AI Tweet Post

on:
  workflow_dispatch:
    inputs:
      tweet_prompt:
        description: 'Describe what your tweet should be about'
        required: true
        type: string
      force_post:
        description: 'Force post even if sentiment is not positive'
        required: false
        default: false
        type: boolean

jobs:
  ai-tweet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install -r deploy_requirements.txt

      - name: Generate Tweet with Claude
        env:
          PROMPT: ${{ inputs.tweet_prompt }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          python generate_claude_tweet.py

      - name: Post Tweet
        env:
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          FORCE_POST: ${{ inputs.force_post }}
        run: |
          TWEET_CONTENT=$(cat generated_tweet.txt)
          python -c "
import tweepy, os
from bot.sentiment_analyzer import SentimentAnalyzer
from config.settings import get_api_credentials

sentiment_analyzer = SentimentAnalyzer()
credentials = get_api_credentials()
client = tweepy.Client(
    consumer_key=credentials['consumer_key'],
    consumer_secret=credentials['consumer_secret'],
    access_token=credentials['access_token'],
    access_token_secret=credentials['access_token_secret']
)
content = '''$TWEET_CONTENT'''
force = os.getenv('FORCE_POST', 'false').lower() == 'true'
sentiment_result = sentiment_analyzer.analyze_sentiment(content)
print(f'Content: {content}')
print(f'Sentiment: {sentiment_result[\"sentiment\"]} (confidence: {sentiment_result[\"confidence\"]:.3f})')
should_post = force or sentiment_result['sentiment'] != 'negative' or sentiment_result['confidence'] < 0.5
if should_post:
    try:
        response = client.create_tweet(text=content)
        tweet_id = response.data['id']
        print(f'Tweet posted successfully! ID: {tweet_id}')
        print(f'URL: https://twitter.com/i/web/status/{tweet_id}')
    except Exception as e:
        print(f'Failed to post: {e}')
        exit(1)
else:
    print('Tweet not posted due to negative sentiment. Use force_post=true to override.')
    exit(1)
"
