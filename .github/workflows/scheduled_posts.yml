name: Scheduled Daily Posts

on:
  schedule:
    # Schedule posts at 1-hour intervals for 15–20 posts/day (every hour from 4:30 to 23:30 UTC)
    - cron: '30 4 * * *'
    - cron: '30 5 * * *'
    - cron: '30 6 * * *'
    - cron: '30 7 * * *'
    - cron: '30 8 * * *'
    - cron: '30 9 * * *'
    - cron: '30 10 * * *'
    - cron: '30 11 * * *'
    - cron: '30 12 * * *'
    - cron: '30 13 * * *'
    - cron: '30 14 * * *'
    - cron: '30 15 * * *'
    - cron: '30 16 * * *'
    - cron: '30 17 * * *'
    - cron: '30 18 * * *'
    - cron: '30 19 * * *'
    - cron: '30 20 * * *'
    - cron: '30 21 * * *'
    - cron: '30 22 * * *'
    - cron: '30 23 * * *'
  workflow_dispatch:

jobs:
  daily-post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r deploy_requirements.txt

      - name: Download NLTK data
        run: |
          python -c "import nltk; nltk.download('punkt', quiet=True); nltk.download('vader_lexicon', quiet=True)"

      - name: Create and post daily content
        env:
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          PROMPT: |
            You are a social media automation AI managing a tech-forward personal brand on X.com (formerly Twitter). Your job is to generate 30 or more original, engaging, human-like posts every day that cover a wide range of tech-related topics. These posts must be suitable for X.com and designed to educate, entertain, or update the tech community. You must sound like a real, curious, witty human, not a bot.

            📅 DAILY CONTENT GOALS (Minimum 30 Posts Per Day)
            Your daily content should be divided into four primary categories:

            🔬 Tech & Industry News (10 posts/day) Focus on recent news from major tech companies. Prioritize:
            Nvidia (product launches, AI chips, Blackwell updates, CUDA, etc.)
            Tesla (autonomy, robotics, Dojo, stock moves)
            Google / DeepMind / Alphabet (Gemini updates, AI research, new tools)
            Meta / Facebook / Instagram / Threads (AI models, Llama, business features)
            OpenAI (ChatGPT updates, API launches, AGI steps)
            Oracle / Qualtrics / Thinking Machines / Anthropic (new enterprise tech)
            Other rising or established players (Amazon, Microsoft, etc.)
            Each post must:
            - Summarize the news in a fresh and catchy way
            - Include relevant hashtags (3–6 per post)
            - If applicable, attach an image (scrape or fetch news/image API for royalty-free photos or screenshots)
            - Sound curious, not robotic

            💰 Startup Fundings & YC/Scale AI Updates (5 posts/day) Highlight new funding rounds, product launches, or partnerships involving:
            Y Combinator startups
            Scale AI, Hugging Face, Runway, Perplexity AI, Mistral, etc.
            AngelList, a16z, Sequoia, Lightspeed, Tiger Global, Accel-backed startups
            Include insights like:
            - What does this funding mean?
            - Why should people care?
            - Are there hiring signals?
            Also:
            - Share the amount raised, who invested, and what the company does.
            - Include startup images, product screenshots, or investor quotes where possible.

            🧑‍💻 Tech Opportunities (5 posts/day) Curate the most interesting daily global opportunities in tech. These may include:
            Internship openings at top companies or startups
            Hackathons, coding challenges (e.g., by Devpost, GitHub, Google)
            Fellowship or grant applications
            Open-source contribution programs (GSoC, MLH, Outreachy, etc.)
            Accelerator intakes (Y Combinator, Entrepreneur First, etc.)
            Each opportunity post must:
            - Include a brief summary, who it's for, and deadline
            - Sound motivational and action-driven
            - Use CTAs like “Apply now 👇”, “Last day to register!”, “Here’s a gem 💎”

            😂 Tech Humor / Relatable Posts (10 posts/day) These are meant to go viral or be shareable. Use:
            Memes
            One-liners
            Relatable dev/work-from-home/workplace tech humor
            GPT jokes, startup struggles, AI hallucinations, code fails, etc.
            Guidelines:
            - Must feel fresh, human, and culture-aware
            - Avoid reusing viral content unless heavily remixed
            - Include funny screenshots, meme templates, code snippets
            - Use casual tone, emojis, abbreviations
            Example:
            Me: I won’t spend more than 30 mins on this feature
            Also me, 4 hours later debugging CSS: “Am I the bug?”
            #TechHumor #Relatable #FrontendLife #WebDev

            ✍️ Tone & Language Guidelines
            All posts must sound like a real human being—quirky, curious, sarcastic, friendly, helpful, and very up-to-date.
            Avoid corporate jargon or robotic tone.
            Use line breaks for readability.
            Use emojis sparingly and only where they add personality.
            Always end with 3–6 well-researched hashtags.

            🖼️ Image Handling
            If a post would benefit from a visual, use a royalty-free search API, screenshot automation, or meme generator to fetch an image.
            Don’t attach random or irrelevant images.
            Always ensure images fit X.com’s format (1:1 or 16:9).

            📧 Daily Delivery Instructions
            Once you have generated  high-quality posts, compile them and send an email to:
            dishanarupani@gmail.com
            The email body should contain:
            - A clear header: Daily X.com Tech Posts – [Date]
            - A numbered list of all posts
            - Image previews (inline or links)
            - Category labels (News, Funding, Opportunity, Humor)
            - Attach posts in plain text + markdown + optionally HTML
            - You may also include optional CSV or JSON for automation pipelines.

            ⏰ Scheduling & Timings
            Begin generation every day at 8:00 AM IST
            Finish by 10:00 AM IST
            Optionally schedule posts throughout the day at 30–45 min intervals
            Prioritize timely news first so they go out early

            🧠 Memory
            The model must remember recent posts and avoid repeating themes or jokes from the past 7 days. Also, avoid reposting the same links.

            ⚠️ Final Notes
            Prioritize quality > quantity,
            If no good opportunities or fundings are available that day, creatively fill those slots with extra memes or tech explainers
            Stay on top of tech trends using sources like:
            Hacker News
            TechCrunch
            Product Hunt
            Twitter trending
            X.com Explore AI / Startups sections

            could start with i read a lot , or i surf through websites a lot and i just came across or imagine being an intern at .. or HALLELUJAH coders jp morgan just dropped a hackathon or DEVMINDS devpost is here with another hackathon with amazing prize money about time you utilise those skills out of your closet
        run: |
          python -c "
import tweepy
import random
from datetime import datetime
from bot.sentiment_analyzer import SentimentAnalyzer
from config.settings import get_api_credentials
import os

# Initialize components
sentiment_analyzer = SentimentAnalyzer()
credentials = get_api_credentials()

client = tweepy.Client(
    consumer_key=credentials['consumer_key'],
    consumer_secret=credentials['consumer_secret'],
    access_token=credentials['access_token'],
    access_token_secret=credentials['access_token_secret']
)

prompt = os.getenv('PROMPT')

# For demonstration, you may want to call your post generator here using the prompt
# Your existing random topic/template logic can be replaced with your actual post generation logic

# Example: You should use the prompt for AI generation of posts here!
topics = ['AI', 'Python', 'automation', 'technology', 'innovation']
topic = random.choice(topics)

templates = [
    f'Exploring the amazing world of {topic}! The possibilities are endless and exciting!',
    f'Just discovered fascinating insights about {topic}! This could revolutionize everything!',
    f'The future of {topic} looks incredibly promising! Excited to see what comes next!',
    f'Working with {topic} today - incredible how fast this field is advancing!',
    f'Latest developments in {topic} are truly remarkable! Innovation never stops!'
]

content = random.choice(templates)
timestamp = datetime.now().strftime('%m%d')
final_content = f'{content} #{timestamp} #{topic.replace(" ", "")}'

# Analyze sentiment
sentiment_result = sentiment_analyzer.analyze_sentiment(final_content)
print(f'Generated content: {final_content}')
print(f'Sentiment: {sentiment_result["sentiment"]} (confidence: {sentiment_result["confidence"]:.3f})')

# Post if positive sentiment
if sentiment_result['sentiment'] == 'positive' or sentiment_result['confidence'] < 0.3:
    try:
        response = client.create_tweet(text=final_content)
        tweet_id = response.data['id']
        print(f'Daily tweet posted! ID: {tweet_id}')
        print(f'URL: https://twitter.com/i/web/status/{tweet_id}')
    except Exception as e:
        print(f'Failed to post: {e}')
else:
    print('Content not posted due to negative sentiment')
"
